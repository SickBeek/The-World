import java.util.HashMap;
import java.util.Scanner;

public class JoJo {

	public static void main(String[] args) {
		HashMap<Cordinate, Double> matrix1 = new HashMap<Cordinate, Double>();
		HashMap<Cordinate, Double> matrix2 = new HashMap<Cordinate, Double>();
		HashMap<Cordinate, Double> matrixMulti = new HashMap<Cordinate, Double>();
		Scanner reader = new Scanner(System.in);
		int col1, ln1, col2, ln2;
		int i, j, z, amount;

		System.out
				.println("Please enter the matrix's column and line numbers: ");
		col1 = reader.nextInt();
		ln1 = reader.nextInt();
		System.out.println("Please enter the amount:");
		amount = reader.nextInt();
		for (i = 0; i < amount; i++) {
			System.out
					.println("Please enter both  cordnites and values of  numbers which are not \"0\":");
		
			matrix1.put(new Cordinate(reader.nextInt(), reader.nextInt()),
					reader.nextDouble());

		}

		System.out
				.println("Please enter the matrix's column and line numbers: ");
		col2 = reader.nextInt();
		ln2 = reader.nextInt();

		System.out.println("Please enter the amount:");
		amount = reader.nextInt();
		for (i = 0; i < amount; i++) {
			System.out
					.println("Please enter both  cordnites and values of  numbers which are not \"0\":");
		
			matrix2.put(new Cordinate(reader.nextInt(), reader.nextInt()),
					reader.nextDouble());

		}

		if (col1 != ln2) {
			System.out.println("Wrong matrices!!");
		} else {

			for (i = 0; i < ln1; i++) {
				for (j = 0; j < col2; j++) {
					double sum = 0;
					for (z = 0; z < col1; z++) {
						Cordinate pos1 = new Cordinate(i, z);
						Cordinate pos2 = new Cordinate(z, j);
						if (matrix1.containsKey(pos1)
								&& matrix2.containsKey(pos2))
							sum += matrix1.get(pos1) + matrix2.get(pos2);
					}
					matrixMulti.put(new Cordinate(i, j), sum);
				}
			}
		}// 计算矩阵的乘法

		for (i = 0; i < ln1; i++) {
			for (j = 0; j < col2; j++)
				System.out.print(matrixMulti.get(new Cordinate(i, j))+" " );
			System.out.println();
		}// 输出矩阵乘法结果

	}

}

class Cordinate {
	private int cordx, cordy;

	Cordinate(int x, int y) {
		cordx = x;
		cordy = y;
	}

	public int getX() {
		return cordx;
	}

	public int getY() {
		return cordy;
	}
}
