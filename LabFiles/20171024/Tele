import java.util.Comparator;
import java.util.Iterator;
import java.util.Scanner;
import java.util.TreeMap;

public class Joestar {

	public static void main(String args[]) {
		MyKeyComparator com = new MyKeyComparator();
		TreeMap<MyKey, Television> tele = new TreeMap<MyKey, Television>(com);
		Scanner reader = new Scanner(System.in);

		int num = 3, i;
		for (i = num; i >= 0; i--) {
			System.out.println("Please enter the size and price:");
			int s = reader.nextInt();
			int p = reader.nextInt();

			tele.put(new MyKey(p), new Television(s, p));
		}

		Iterator<MyKey> iter = tele.keySet().iterator();

		while (iter.hasNext()) {
			MyKey tempkey = iter.next();
			System.out.print(tele.get(tempkey).getSize() + " ");
			System.out.println(tele.get(tempkey).getPrice());
		}
	}

}

class Television {
	private int size, price;

	Television(int s, int p) {
		size = s;
		price = p;
	}

	int getSize() {
		return size;
	}

	int getPrice() {
		return price;
	}

}

class MyCompareKey implements Comparable {
	private int myKey, myCompare;

	MyCompareKey(int s2) {
		myCompare = s2;
	}

	public int compareTo(Object o) {
		MyCompareKey other = (MyCompareKey) o;
		return myCompare - other.myCompare;
	}

}

class MyKey {
	private int myCompare;

	MyKey(int s2) {
		myCompare = s2;
	}

	public int compareTo(Object o) {
		MyKey other = (MyKey) o;
		return myCompare - other.myCompare;
	}

	public int getCompare() {
		return myCompare;
	}

}

class MyKeyComparator implements Comparator {
	public int compare(Object s1, Object s2) {
		MyKey k1 = (MyKey) s1;
		MyKey k2 = (MyKey) s2;
		return k1.getCompare() - k2.getCompare();
	}
}
